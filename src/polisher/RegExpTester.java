package polisher;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author cnsaeman
 */
public class RegExpTester extends javax.swing.JDialog {
    
    private Resources RSC;

    /**
     * Creates new form RegExpTester
     */
    public RegExpTester(Resources RSC) {
        super(RSC.MF, false);
        initComponents();
        setTitle("Regular Expression Tester");
        this.RSC=RSC;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTFRegExp = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTATestString = new javax.swing.JTextArea();
        JBtnTest = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTPOutput = new javax.swing.JTextPane();
        jBtnClose = new javax.swing.JButton();
        jTFResults = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Regular Expression:");

        jTFRegExp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFRegExpActionPerformed(evt);
            }
        });

        jLabel2.setText("Test Input:");

        jTATestString.setColumns(20);
        jTATestString.setRows(5);
        jScrollPane1.setViewportView(jTATestString);

        JBtnTest.setText("Test");
        JBtnTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtnTestActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jTPOutput);

        jBtnClose.setText("Close");
        jBtnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCloseActionPerformed(evt);
            }
        });

        jLabel4.setText("Results:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(JBtnTest))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFResults, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jBtnClose))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
                            .addComponent(jTFRegExp))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTFRegExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JBtnTest)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFResults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnClose)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFRegExpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFRegExpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFRegExpActionPerformed

    private void JBtnTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtnTestActionPerformed
        try { 
            Pattern pattern = Pattern.compile(jTFRegExp.getText());
            String testText=jTATestString.getText();
            Matcher m = pattern.matcher(testText);
            //m.region(component.start, component.end);
            StringBuilder out=new StringBuilder();
            while (m.find()) {
                out.append("\nFound: ").append(m.start()).append("-").append(m.end()).append(": ").append(testText.substring(m.start(), m.end()));
            }
            if (out.length()==0) out.append("\nNo match.");
            jTPOutput.setText(out.substring(1));
        } catch (Exception ex) {
            RSC.outEx(ex);
        }

        
        /*jTPOutput.setDocument(new DefaultStyledDocument());
        jTPOutput.setText("");
        HashMap<Integer,ArrayList<Rule>> rules=new HashMap<>();
        try {
            int level=Integer.valueOf(jTFLevel.getText());
            Rule rule=new Rule("Testing pattern",jTFRegExp.getText(),level,100);
            ArrayList<Rule> subRules=new ArrayList<>();
            subRules.add(rule);
            rules.put(level, subRules);
            Analyzer analyzer=new Analyzer(RSC,jTATestString.getText(), rules);
            analyzer.findProblems();
            jTPOutput.setText(jTATestString.getText());
            for (Problem p : analyzer.problems) {
                switch(p.severity) {
                    case 1: jTPOutput.getStyledDocument().setCharacterAttributes(p.start,(p.end-p.start),RSC.sasPink, false); break;
                    case 50: jTPOutput.getStyledDocument().setCharacterAttributes(p.start,(p.end-p.start),RSC.sasOrange, false); break;
                    case 100: jTPOutput.getStyledDocument().setCharacterAttributes(p.start,(p.end-p.start),RSC.sasRed, false); break;
                }
            }
            jTFResults.setText("Found "+analyzer.problems.size()+" problems.");
        } catch (Exception e) {
            e.printStackTrace();
            jTPOutput.setText("Error in understanding expressions: "+e.toString());
            jTFResults.setText("Error in understanding expressions.");
        }*/
    }//GEN-LAST:event_JBtnTestActionPerformed

    private void jBtnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCloseActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jBtnCloseActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBtnTest;
    private javax.swing.JButton jBtnClose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTATestString;
    private javax.swing.JTextField jTFRegExp;
    private javax.swing.JTextField jTFResults;
    private javax.swing.JTextPane jTPOutput;
    // End of variables declaration//GEN-END:variables
}
